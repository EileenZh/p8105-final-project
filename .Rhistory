mutate(text_label = str_c("Annual mean salary$:",salary_mean))
p <- nyc_jobs %>%
mutate(text_label = str_c("Annual mean salary$:",salary_mean)) %>%
plot_mapbox(lat = ~lat, lon = ~lon,
size=2,
split = nyc_jobs$job_category,
mode = 'scattermapbox') %>%
add_markers(
text = ~paste(nyc_jobs$text_label), sep = "<br />",
color = ~job_category,size = I(9)) %>%
layout(title = 'Work Location',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
p
p <- nyc_jobs %>%
mutate(text_label = str_c("Annual mean salary$:",salary_mean)) %>%
plot_mapbox(lat = ~lat, lon = ~lon,
size=2,
split = nyc_jobs$job_category,
mode = 'scattermapbox') %>%
add_markers(
text = ~text_label,
color = ~job_category,size = I(9)) %>%
layout(title = 'Work Location',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
p
nyc_jobs
filter(lon<73.75, lon<74.23,lat<40.87, lat>40.58) %>%
mutate(text_label = str_c("mean salary: $", salary_mean)) %>%
plot_ly(x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean,
text = ~text_label) %>%
labs(title = "Work location in NYC")
View(nyc_jobs)
myLocation_nyc = c(-74.23,40.58,-73.75,40.87)
myMap_nyc <- get_map(location=myLocation_nyc,
source = "stamen",maptype = "watercolor", crop = FALSE)
ggmap(myMap_nyc)+
geom_point(aes(x = lon, y = lat), data = nyc_jobs,
alpha = .5, color="darkred",size = 3) +
labs(title = "Work location in NYC")
ggmap(myMap_nyc)+
geom_point(aes(x = lon, y = lat), data = nyc_jobs,
alpha = .5, color="darkred",size = 3) +
labs(title = "Work location in NYC")
nyc_jobs
filter(lon<73.75, lon<74.23,lat<40.87, lat>40.58) %>%
mutate(text_label = str_c("mean salary: $", salary_mean)) %>%
plot_ly(x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean,
text = ~text_label) %>%
labs(title = "Work location in NYC")
nyc_jobs %>%
filter(lon<73.75, lon<74.23,lat<40.87, lat>40.58) %>%
mutate(text_label = str_c("mean salary: $", salary_mean)) %>%
plot_ly(x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean,
text = ~text_label) %>%
labs(title = "Work location in NYC")
plot_ly(nyc_jobs,x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean,
text = ~text_label) %>%
labs(title = "Work location in NYC")
plot_ly(nyc_jobs,x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean,
text = ~text_label)
plot_ly(nyc_jobs,x = ~lon, y = ~lat, type = "scatter", mode = "markers",
alpha = 0.5,
color = ~salary_mean)
View(nyc_jobs)
ggplot(nyc_jobs,aes(y = salary_mean)) %>%
geom_boxplot(color = job_category)
ggplot(nyc_jobs,aes(y = salary_mean)) %>%
geom_boxplot(color = nyc_jobs$job_category)
nyc_jobs %>%
group_by(job_category) %>%
ggplot(aes(y = salary_mean)) %>%
geom_boxplot()
nyc_jobs %>%
group_by(job_category) %>%
ggplot(aes(x= job_category, y = salary_mean)) %>%
geom_boxplot()
nyc_jobs %>%
group_by(job_category) %>%
ggplot(aes(x= job_category, y = salary_mean)) +
geom_boxplot()
nyc_jobs %>%
plot_ly(y = ~salary_mean, color = ~job_category, type = "box",
colors = "Set2")
nyc_jobs %>%
plot_ly(y = ~salary_mean, color = ~job_category, type = "box",
colors = "Set2") %>%
layout(title = "Annual average salary distribution in 12 job categories")
install.packages("ggmap")
View(nyc_jobs)
library(tidyverse)
library(haven)
library(readxl)
library(janitor)
salary_postion = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions))
View(salary_postion)
salary_postion = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency, salary_mean) %>%
summarise(positions = sum(x_of_positions))
salary_postion = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions))
ggplot(salary_postion, aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
library(forcats)
salary_postion = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions)) %>%
ggplot(salary_postion, aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
library(viridis)
salary_postion = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions)) %>%
ggplot(aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
salary_postions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions))
ggplot(salary_positions, aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions))
ggplot(salary_positions, aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
try = nyc_jobs %>%
select(agency, x_of_positions, salary_mean, business_title) %>%
group_by(agency, salary_mean)
View(try)
try = nyc_jobs %>%
group_by(agency, salary_mean)
View(try)
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency) %>%
group_by(agency, salary_mean)
View(salary_postions)
View(salary_positions)
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
group_by(agency, salary_mean)
View(salary_positions)
nyc_jobs %>%
plot_ly(y = ~salary_mean, color = ~job_category, type = "box",
colors = "Set2") %>%
layout(title = "Annual average salary distribution in 12 job categories")
library(plotly)
library(stringr)
nyc_jobs %>%
plot_ly(y = ~salary_mean, color = ~job_category, type = "box",
colors = "Set2") %>%
layout(title = "Annual average salary distribution in 12 job categories")
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
filter(!x_of_positions = 1) %>%
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
filter(!x_of_positions == 1) %>%
group_by(agency, salary_mean)
View(salary_positions)
salary_positions %>% select(job_category) %>% n_distinct()
salary_positions %>% select(agency) %>% n_distinct()
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
filter(!x_of_positions == 1) %>%
group_by(agency, salary_mean) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions))
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
group_by(agency) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions))
ggplot(salary_positions, aes(x = agency, y = positions)) +
geom_col(fill = "blue", alpha = .7) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Number of positions vs. job categories",
x = "Job category",
y = "Number of positions"
)
plot_ly(salary_positions, x = ~agency, y = ~positions, type = "bar",
color = "Set2")
plot_ly(salary_positions, x = ~salary_mean, y = ~positions, type = "scatter",
color = "Set2")
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions))
salary_positions = nyc_jobs %>%
select(x_of_positions, salary_mean, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
mutate(agency = factor(agency),
agency = fct_reorder(agency, positions))
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
top_n(5)
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
top_n(5)
knitr::kable(salary_positions)
?summarise
?top_n
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
top_n(5, positions)
knitr::kable(salary_positions)
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
top_n(5, positions)
View(salary_positions)
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions), order = TRUE)
View(salary_positions)
salary_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
View(salary_positions)
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
knitr::kable(head(job_positions, 10))
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
knitr::kable(head(job_positions, 10))
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plotly(x = job_category, y = positions, type = "bar",
color = "Set2")
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2")
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2")
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2") %>%
layout(title = "Number of positions of each job category")
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2") %>%
layout(title = "Number of positions of each job category")
knitr::kable(head(job_positions, 10))
nyc_jobs %>% select(job_category) %>% n_distinct()
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2") %>%
layout(title = "Number of positions of each job category")
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
# Number of job positions: top 10
knitr::kable(head(job_positions, 10))
job_positions %>%
group_by(job_category) %>%
summarise(positions = sum(positions)) %>%
mutate(job_category = factor(job_category),
job_category = fct_reorder(job_category, positions)) %>%
plot_ly(x = ~job_category, y = ~positions, type = "bar",
color = "Set2") %>%
layout(title = "Number of positions of each job category")
?diamonds
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
View(positions_plot)
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
mutate(year = as.numeric(year)) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year)
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, type = "bar")
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, type = "bar") %>%
layout(title = "Number of positions of job categories in each year",
barmode = "group")
library(ggplot2)
?diamonds
diamonds
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, type = "bar") %>%
layout(title = "Number of positions of job categories in each year",
barmode = "group")
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, color = "Set2", type = "bar") %>%
layout(title = "Number of positions of job categories in each year",
barmode = "group")
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, type = "bar") %>%
layout(title = "Number of positions of job categories in each year",
barmode = "group")
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
# Number of job positions: top 10
knitr::kable(head(job_positions, 10))
View(job_positions)
job_positions[1,1]
job_positions[[1]]
job_positions[[1]][1]
library(tidyverse)
library(haven)
library(readxl)
library(janitor)
library(ggmap)
library(plotly)
library(stringr)
library(wordcloud2)
install.packages("wordcloud2")
library(tidyverse)
library(haven)
library(readxl)
library(janitor)
library(ggmap)
library(plotly)
library(stringr)
library(wordcloud2)
library(tidytext)
library(forcats)
library(viridis)
library(ggplot2)
job_positions = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean) %>%
distinct() %>%
group_by(agency, job_category) %>%
summarise(positions = sum(x_of_positions)) %>%
arrange(desc(positions))
# Number of job positions: top 10
knitr::kable(head(job_positions, 10))
positions_plot = nyc_jobs %>%
select(x_of_positions, agency, job_category, salary_mean, posting_date) %>%
distinct() %>%
separate(posting_date, into = c("year", "month", "day"), sep = "-") %>%
select(-month, -day) %>%
group_by(job_category, year) %>%
summarise(positions = sum(x_of_positions))
plot_ly(positions_plot, x = ~job_category, y = ~positions,
color = ~year, type = "bar") %>%
layout(title = "Number of positions of job categories in each year",
barmode = "group")
